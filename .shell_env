# -*- mode: sh -*-

############################
# Standard shell variables #
############################
export TERM=xterm-256color
export EDITOR="env TERM=xterm-24bit emacsclient -c -nw"
export BROWSER="/Applications/Firefox.app/Contents/MacOS/firefox"
export VISUAL="$EDITOR"
export PAGER="less"
export LC_ALL=en_US.UTF-8
export LANG=en_US.UTF-8
export LESS="-X -r"
export GREP_OPTIONS="--color=auto"

ulimit -n 1024

########
# Rust #
########

export CARGO_NET_GIT_FETCH_WITH_CLI=true

###################
# Personal quirks #
###################
export PYTHONPATH="$PYTHONPATH:$HOME/local/python"
export WINEPREFIX="${HOME}/.wine"
export PGDATA='/usr/local/var/postgresql@11'
# Uncomment this line to use us-west-1 for AWS:
#export EC2_URL="https://ec2.us-west-1.amazonaws.com"
# Uncomment this line to use us-east-1 for AWS:
export EC2_URL="https://ec2.amazonaws.com"

##############
# Work stuff #
##############
export SLACK_DEVELOPER_MENU=TRUE
export CHEF_USER=llovett
# Do not compress assets in raise-ror-webapp.
export RAILS_ASSET_DEBUG=true

# Get evaluation data tests to run locally.  Enabling this results in
# our tests assuming that we are not running the webpack dev server:
# export CI=true
export CIRCLE_BRANCH=develop
export RACK_ENV=development

##########
# docker #
##########

# Do not show the ad 'Use 'docker scan' to run Snyk tests against images to find vulnerabilities and learn how to fix them'
export DOCKER_SCAN_SUGGEST=false

########
# PATH #
########
export CDPATH="$CDPATH:$HOME/code/dev-environment:$HOME/code"

# Add rbenv shims to the path.
whence rbenv && {
  PATH="$HOME/.rbenv/shims:$PATH"
  eval "$(rbenv init -)"
}

# Add nodenv shims to the path.
whence nodenv && {
  PATH="$HOME/.nodenv/shims:$PATH"
}

# Homebrew
export PATH="${PATH}:/opt/homebrew/bin"

# Add skim utilities to PATH.
PATH="$PATH:/Applications/Skim.app/Contents/SharedSupport"

# goenv
if [ -d "$HOME/.goenv" ]; then
  export GOENV_ROOT="$HOME/.goenv"
  export PATH="$GOENV_ROOT/bin:$PATH"
  eval "$(goenv init -)"
  export PATH="$GOROOT/bin:$PATH"
  export PATH="$PATH:$GOPATH/bin"
fi

# pyenv
whence pyenv && {
  export PYENV_ROOT="${HOME}/.pyenv"
  export PATH="${PYENV_ROOT}/bin:${PATH}"
  eval "$(pyenv init -)"
}

# emacs
PATH="${PATH}:/Applications/Emacs.app/Contents/MacOS/bin"

# local
PATH="$HOME/local/bin:$PATH"

export PATH
